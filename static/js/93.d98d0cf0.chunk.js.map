{"version":3,"file":"static/js/93.d98d0cf0.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","toPropertyKey","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","getPrototypeOf","desc","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","createDomMotionConfig"],"sourceRoot":""}